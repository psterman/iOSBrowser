#!/bin/bash

# 调试用户操作的脚本

echo "🔍🔍🔍 调试用户操作问题 🔍🔍🔍"

echo "📊 问题现象："
echo "❌ 小组件只显示初始化数据: [\"search\", \"bookmark\"]"
echo "❌ 用户在配置页面的勾选操作没有反映到小组件"
echo "❌ 重启应用后仍然是默认数据"

echo ""
echo "🔍 可能的原因："
echo "1. 用户操作没有触发toggle方法"
echo "2. toggle方法被调用但保存失败"
echo "3. 保存成功但小组件读取的是错误的数据"
echo "4. 数据被其他地方覆盖了"

echo ""
echo "📱 立即测试步骤："

echo ""
echo "第一步：验证用户操作是否触发toggle方法"
echo "   1. 进入小组件配置页面"
echo "   2. 点击快捷操作tab"
echo "   3. 点击任意一个快捷操作进行勾选/取消勾选"
echo "   4. 观察控制台是否有以下日志："
echo "      🚨🚨🚨 toggleQuickAction 被调用: [操作名]"
echo ""
echo "   如果没有这个日志，说明："
echo "   ❌ 按钮点击事件没有绑定到toggle方法"
echo "   ❌ UI响应有问题"
echo "   ❌ 需要检查按钮的action绑定"

echo ""
echo "第二步：如果有toggle日志，检查保存过程"
echo "   应该看到完整的保存流程："
echo "   🚨 当前快捷操作: [当前数据]"
echo "   🚨 添加/移除快捷操作: [操作名]"
echo "   🚨 新的快捷操作列表: [新数据]"
echo "   🚨 已保存快捷操作到UserDefaults，同步结果: true"
echo "   🚨 已刷新小组件"
echo "   🚨 验证保存结果: [保存的数据]"
echo "   🚨 ✅ 快捷操作数据保存成功！"
echo ""
echo "   如果缺少某些日志，说明："
echo "   ❌ 保存过程中断"
echo "   ❌ UserDefaults操作失败"
echo "   ❌ 数据验证失败"

echo ""
echo "第三步：手动验证UserDefaults中的数据"
echo "   在Xcode调试控制台中输入："
echo "   po UserDefaults.standard.stringArray(forKey: \"iosbrowser_actions\")"
echo ""
echo "   应该看到用户选择的数据，而不是默认数据"
echo "   如果仍是默认数据，说明保存确实失败了"

echo ""
echo "第四步：检查应用启动时的数据覆盖"
echo "   观察应用启动日志："
echo "   🚨🚨🚨 ===== 应用启动，立即初始化数据 ====="
echo "   🚀 快捷操作已存在: [数据]"
echo ""
echo "   如果显示'初始化快捷操作'而不是'已存在'，说明："
echo "   ❌ 应用启动时覆盖了用户数据"
echo "   ❌ 初始化逻辑有问题"

echo ""
echo "🔧 可能的修复方案："

echo ""
echo "方案1：如果toggle方法没有被调用"
echo "   - 检查按钮的action绑定"
echo "   - 确认UI响应是否正常"
echo "   - 检查是否有其他UI元素遮挡"

echo ""
echo "方案2：如果toggle方法被调用但保存失败"
echo "   - 检查UserDefaults权限"
echo "   - 确认数据格式是否正确"
echo "   - 检查同步操作是否成功"

echo ""
echo "方案3：如果保存成功但被覆盖"
echo "   - 修改应用启动初始化逻辑"
echo "   - 只在数据真正为nil时才初始化"
echo "   - 避免覆盖用户数据"

echo ""
echo "方案4：如果小组件读取错误"
echo "   - 检查小组件读取的键名"
echo "   - 确认读取时机是否正确"
echo "   - 验证数据格式匹配"

echo ""
echo "🧪 紧急测试方法："

echo ""
echo "测试A：最简单的验证"
echo "   1. 完全关闭应用"
echo "   2. 重新启动应用"
echo "   3. 不进入配置页面，直接添加小组件"
echo "   4. 观察小组件显示的数据"
echo "   5. 如果是默认数据，说明初始化工作正常"

echo ""
echo "测试B：手动数据验证"
echo "   1. 在应用启动后，在Xcode控制台输入："
echo "      po UserDefaults.standard.set([\"ai_chat\", \"translate\"], forKey: \"iosbrowser_actions\")"
echo "      po UserDefaults.standard.synchronize()"
echo "   2. 刷新小组件"
echo "   3. 观察小组件是否显示[\"ai_chat\", \"translate\"]"
echo "   4. 如果显示，说明小组件读取正常，问题在保存"

echo ""
echo "测试C：配置页面操作验证"
echo "   1. 进入配置页面"
echo "   2. 观察'当前已选择: X个'的数字"
echo "   3. 点击勾选/取消勾选"
echo "   4. 观察数字是否立即变化"
echo "   5. 如果数字不变，说明UI更新有问题"

echo ""
echo "🔍🔍🔍 调试指南完成 🔍🔍🔍"

echo ""
echo "💡 关键提示："
echo "   请按照上述步骤逐一测试，"
echo "   找出问题出现在哪个环节，"
echo "   然后针对性地修复！"

echo ""
echo "📋 请告诉我："
echo "1. 点击快捷操作时是否有🚨🚨🚨 toggleQuickAction日志？"
echo "2. 如果有日志，保存过程是否完整？"
echo "3. UserDefaults中实际存储的是什么数据？"
echo "4. 配置页面的'当前已选择'数字是否正确？"
